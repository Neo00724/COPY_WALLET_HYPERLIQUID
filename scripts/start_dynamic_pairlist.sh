#!/bin/bash

# Script de d√©marrage du service de paires dynamiques
# Usage: ./start_dynamic_pairlist.sh [ADDRESS_TO_TRACK]

set -e

# Configuration par d√©faut
DEFAULT_ADDRESS="CHANGE_ME_TO_THE_ADDRESS_YOU_WANT_TO_TRACK"
TRACKED_ADDRESS="${1:-$DEFAULT_ADDRESS}"
REFRESH_PERIOD="${REFRESH_PERIOD:-900}"
MAX_PAIRS="${MAX_PAIRS:-50}"
MIN_PAIR_AGE_HOURS="${MIN_PAIR_AGE_HOURS:-1}"

echo "=================================================="
echo "D√âMARRAGE DU SERVICE DE PAIRES DYNAMIQUES"
echo "=================================================="
echo "Adresse suivie: $TRACKED_ADDRESS"
echo "P√©riode de rafra√Æchissement: ${REFRESH_PERIOD}s"
echo "Maximum de paires: $MAX_PAIRS"
echo "√Çge minimum des paires: ${MIN_PAIR_AGE_HOURS}h"
echo "=================================================="

# V√©rifier si l'adresse a √©t√© configur√©e
if [ "$TRACKED_ADDRESS" = "$DEFAULT_ADDRESS" ]; then
    echo "‚ö†Ô∏è  ATTENTION: Vous devez configurer l'adresse √† suivre!"
    echo "Usage: $0 <ADRESSE_HYPERLIQUID>"
    echo "Exemple: $0 0x4b66f4048a0a90fd5ff44abbe5d68332656b78b8"
    echo ""
    echo "Ou d√©finir la variable d'environnement:"
    echo "export TRACKED_ADDRESS=0x4b66f4048a0a90fd5ff44abbe5d68332656b78b8"
    echo ""
    read -p "Voulez-vous continuer avec l'adresse par d√©faut? (y/N): " -n 1 -r
    echo
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        exit 1
    fi
fi

# Cr√©er le r√©pertoire de donn√©es s'il n'existe pas
mkdir -p user_data/strategies/position_data
mkdir -p logs

# Fonction pour d√©marrer en mode standalone
start_standalone() {
    echo "üöÄ D√©marrage en mode standalone..."
    
    # Installer les d√©pendances si n√©cessaire
    if [ ! -f "venv/bin/activate" ]; then
        echo "üì¶ Cr√©ation de l'environnement virtuel..."
        python3 -m venv venv
    fi
    
    echo "üîß Activation de l'environnement virtuel..."
    source venv/bin/activate
    
    # V√©rifier si les d√©pendances sont install√©es
    if ! python -c "import flask" 2>/dev/null; then
        echo "üì¶ Installation des d√©pendances..."
        pip install -r requirements-pairlist.txt
    fi
    
    echo "‚úÖ Environnement pr√™t, d√©marrage du service..."
    
    # D√©marrer le service
    python dynamic_pairlist_service.py \
        --address "$TRACKED_ADDRESS" \
        --refresh-period "$REFRESH_PERIOD" \
        --max-pairs "$MAX_PAIRS" \
        --port 5000 \
        --host 0.0.0.0
}

# Fonction pour d√©marrer avec Docker
start_docker() {
    echo "üê≥ D√©marrage avec Docker..."
    
    # Cr√©er le r√©seau s'il n'existe pas
    docker network create freqtrade-network 2>/dev/null || true
    
    # Exporter les variables d'environnement
    export TRACKED_ADDRESS
    export REFRESH_PERIOD
    export MAX_PAIRS
    export MIN_PAIR_AGE_HOURS
    
    # Construire et d√©marrer le service
    docker-compose -f docker-compose-pairlist.yml up --build -d
    
    echo "‚úÖ Service d√©marr√© en arri√®re-plan"
    echo "üìä Logs: docker-compose -f docker-compose-pairlist.yml logs -f"
    echo "üîç Test: python test_dynamic_pairlist.py"
    echo "üõë Arr√™t: docker-compose -f docker-compose-pairlist.yml down"
}

# Fonction pour tester le service
test_service() {
    echo "üß™ Test du service..."
    sleep 5  # Attendre que le service d√©marre
    
    if command -v python3 &> /dev/null; then
        python3 test_dynamic_pairlist.py
    else
        echo "‚ùå Python3 non trouv√© pour les tests"
    fi
}

# Menu de s√©lection du mode
echo ""
echo "Choisissez le mode de d√©marrage:"
echo "1) Standalone (Python local)"
echo "2) Docker (recommand√©)"
echo "3) Test uniquement"
echo ""
read -p "Votre choix (1-3): " -n 1 -r
echo ""

case $REPLY in
    1)
        start_standalone
        ;;
    2)
        start_docker
        echo ""
        echo "‚è≥ Attente du d√©marrage du service..."
        sleep 10
        test_service
        ;;
    3)
        test_service
        ;;
    *)
        echo "‚ùå Choix invalide"
        exit 1
        ;;
esac

echo ""
echo "‚úÖ Script termin√©!"